{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNiogEhgR0piOjg1VIyvC4d"},"kernelspec":{"name":"ir","display_name":"R"},"language_info":{"name":"R"}},"cells":[{"cell_type":"markdown","source":["# MDSC-301(P) - Lab Chapter 1 - R"],"metadata":{"id":"WGxfDSBRMG3t"}},{"cell_type":"markdown","source":["# 1.Simulate flipping three fair coins and counting the number of heads X.\n","- Use your simulation to estimate P(X=1) and E(X).\n","- Modify the above to allow for a biased coin where P(Heads)=3/4"],"metadata":{"id":"py1TXBUC1pv1"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"juOTr_Zoy6KL","executionInfo":{"status":"ok","timestamp":1695357665318,"user_tz":-330,"elapsed":506,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"d1b9289d-01df-498d-f9de-c1e58f72913b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Estimated P(X = 1): 0.379 \n","Estimated E(X): 1.4933 \n"]}],"source":["# Set the number of simulations\n","num_simulations <- 10000\n","\n","# Simulate flipping three coins and counting heads\n","simulate_flips <- function(num_flips) {\n","  outcomes <- sample(c(\"H\", \"T\"), num_flips, replace = TRUE)\n","  num_heads <- sum(outcomes == \"H\")\n","  return(num_heads)\n","}\n","\n","# Simulate the experiment multiple times\n","results <- replicate(num_simulations, simulate_flips(3))\n","\n","# Calculate probability P(X = 1) and expected value E(X)\n","prob_X_equals_1 <- sum(results == 1) / num_simulations\n","expected_value_X <- mean(results)\n","\n","# Print the results\n","cat(\"Estimated P(X = 1):\", prob_X_equals_1, \"\\n\")\n","cat(\"Estimated E(X):\", expected_value_X, \"\\n\")"]},{"cell_type":"code","source":["# Set the number of simulations\n","num_simulations <- 10000\n","\n","# Bias of the coin (P(Heads) = 3/4)\n","bias <- c(3/4, 1/4)\n","\n","# Simulate flipping three biased coins and counting heads\n","simulate_flips_biased <- function(num_flips, bias) {\n","  outcomes <- sample(c(\"H\", \"T\"), num_flips, replace = TRUE, prob = bias)\n","  num_heads <- sum(outcomes == \"H\")\n","  return(num_heads)\n","}\n","\n","# Simulate the experiment multiple times\n","results_biased <- replicate(num_simulations, simulate_flips_biased(3, bias))\n","\n","# Calculate probability P(X = 1) and expected value E(X)\n","prob_X_equals_1_biased <- sum(results_biased == 1) / num_simulations\n","expected_value_X_biased <- mean(results_biased)\n","\n","# Print the results\n","cat(\"Estimated P(X = 1) with biased coin:\", prob_X_equals_1_biased, \"\\n\")\n","cat(\"Estimated E(X) with biased coin:\", expected_value_X_biased, \"\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ozm1lBo31ekd","executionInfo":{"status":"ok","timestamp":1695357666307,"user_tz":-330,"elapsed":544,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"b012ec2c-7b41-4c4d-ed5f-7f8478807d1b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Estimated P(X = 1) with biased coin: 0.1351 \n","Estimated E(X) with biased coin: 2.2609 \n"]}]},{"cell_type":"markdown","source":["# 2. Cards are drawn from a standard deck, with replacement, until an ace appears.Simulate the mean and variance of the number of cards required."],"metadata":{"id":"cd_4b7NK2GTM"}},{"cell_type":"code","source":["# Set the number of simulations\n","num_simulations <- 10000\n","\n","# Function to simulate drawing cards until an ace appears\n","simulate_draw_until_ace <- function() {\n","  cards_drawn <- 0\n","  while (TRUE) {\n","    cards_drawn <- cards_drawn + 1\n","    if (sample(1:13, 1, replace = TRUE) == 1) {\n","      break\n","    }\n","  }\n","  return(cards_drawn)\n","}\n","\n","# Simulate the experiment multiple times\n","results <- replicate(num_simulations, simulate_draw_until_ace())\n","\n","# Calculate mean and variance of the number of cards required\n","mean_cards_required <- mean(results)\n","variance_cards_required <- var(results)\n","\n","# Print the results\n","cat(\"Estimated mean number of cards required:\", mean_cards_required, \"\\n\")\n","cat(\"Estimated variance of cards required:\", variance_cards_required, \"\\n\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ULJkk8x62th3","executionInfo":{"status":"ok","timestamp":1695357667630,"user_tz":-330,"elapsed":1324,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"0bb50c6d-80f1-455e-edb1-6cafdaf476d6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Estimated mean number of cards required: 13.1345 \n","Estimated variance of cards required: 157.1241 \n"]}]},{"cell_type":"markdown","source":["# 3. The time until a bus arrives has an exponential distribution with mean 30 minutes.\n","\n","- Use the command 'rexp()' to simulate the probability that the bus arrives in the first 20 minutes.\n","- Use the command 'pexp()' to compare the exact probability."],"metadata":{"id":"0GZ59Jaz27JN"}},{"cell_type":"code","source":["# Set the seed for reproducibility\n","set.seed(123)\n","\n","# Mean of the exponential distribution (given as 30 minutes)\n","mean_time <- 30\n","\n","# Number of simulations\n","num_simulations <- 10000\n","\n","# Simulate arrival times using rexp()\n","arrival_times <- rexp(num_simulations, rate = 1/mean_time)\n","\n","# Calculate the proportion of arrivals within the first 20 minutes\n","proportion_within_20_minutes <- mean(arrival_times <= 20)\n","\n","# Print the result\n","print(proportion_within_20_minutes)"],"metadata":{"id":"EhqtbYx520Hd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1695357667630,"user_tz":-330,"elapsed":16,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"a3e71ec2-a36b-44cd-b6c0-d2ffb43beda0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1] 0.4832\n"]}]},{"cell_type":"code","source":["# Mean of the exponential distribution (given as 30 minutes)\n","mean_time <- 30\n","\n","# Calculate the exact probability using pexp()\n","exact_probability <- pexp(20, rate = 1/mean_time)\n","\n","# Print the exact probability\n","print(exact_probability)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tgZQU-qw28lr","executionInfo":{"status":"ok","timestamp":1695357667631,"user_tz":-330,"elapsed":11,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"08efdcb0-e961-4ab5-9b12-bfade57f2bbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1] 0.4865829\n"]}]},{"cell_type":"markdown","source":["**See gamblersruin.R https://people.carleton.edu/~rdobrow/StochasticBook/Rscripts/gamblersruin.R**\n","\n","# 4. A gambler starts with a $60 initial stake.\n","\n","- The gambler wins, and loses, each round with probability p = 0.50. Simulate the probability the gambler wins $100 before he loses everything.\n","\n","- The gambler wins each round with probability p = 0.51. Simulate the probability the gambler wins $100 before he loses everything."],"metadata":{"id":"WkzbaJLQ3iZj"}},{"cell_type":"code","source":["# Set the seed for reproducibility\n","set.seed(123)\n","\n","# Parameters\n","initial_stake <- 60\n","win_probability <- 0.5\n","target_win_amount <- 100\n","simulations <- 1000\n","\n","# Initialize variables to count wins and losses\n","wins <- 0\n","losses <- 0\n","\n","# Perform simulations\n","for (i in 1:simulations) {\n","  current_stake <- initial_stake\n","  while (current_stake > 0 && current_stake < target_win_amount) {\n","    if (runif(1) < win_probability) {\n","      current_stake <- current_stake + 1\n","    } else {\n","      current_stake <- current_stake - 1\n","    }\n","  }\n","  if (current_stake == target_win_amount) {\n","    wins <- wins + 1\n","  } else {\n","    losses <- losses + 1\n","  }\n","}\n","\n","# Calculate the probability of winning $100 before losing everything\n","win_probability_simulated <- wins / simulations\n","print(win_probability_simulated)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hSZdrW253YIL","executionInfo":{"status":"ok","timestamp":1695357674979,"user_tz":-330,"elapsed":7355,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"f97758d3-37a1-4bf0-fcc0-55807b6a3e0e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1] 0.608\n"]}]},{"cell_type":"code","source":["# Set the seed for reproducibility\n","set.seed(123)\n","\n","# Parameters\n","initial_stake <- 60\n","win_probability <- 0.51\n","target_amount <- 100\n","num_simulations <- 1000\n","\n","# Simulate the game\n","simulate_game <- function() {\n","  stake <- initial_stake\n","  while (stake > 0 && stake < target_amount) {\n","    if (runif(1) < win_probability) {\n","      stake <- stake + 1\n","    } else {\n","      stake <- stake - 1\n","    }\n","  }\n","  return(stake == target_amount)\n","}\n","\n","# Run simulations\n","num_wins <- sum(replicate(num_simulations, simulate_game()))\n","\n","# Calculate the probability of winning $100 before losing everything\n","probability_win_before_lose <- num_wins / num_simulations\n","\n","# Print the result\n","print(probability_win_before_lose)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cxS7TcnS5Xh7","executionInfo":{"status":"ok","timestamp":1695357680469,"user_tz":-330,"elapsed":5495,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"2bfc8e46-7c25-4f2c-cfb5-65bc4566af41"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1] 0.932\n"]}]},{"cell_type":"markdown","source":["**See Example 1.2 and the script file ReedFrost.R**\n","# 5. Observe the effect on the course of the disease by changing the initial values for the number of people susceptible and infected. How does increasing the number of infected peopleaffect the duration of the disease?"],"metadata":{"id":"_gWgxDjv6tAF"}},{"cell_type":"code","source":["# Parameters\n","beta <- 0.3   # Infection rate\n","gamma <- 0.1  # Recovery rate\n","\n","# Initial values\n","initial_susceptible <- 950\n","initial_infected <- 50\n","initial_recovered <- 0\n","\n","# Time points for simulation\n","time <- seq(0, 100, by = 1)\n","\n","# Initialize vectors to store results\n","susceptible <- numeric(length(time))\n","infected <- numeric(length(time))\n","recovered <- numeric(length(time))\n","\n","# Set initial values\n","susceptible[1] <- initial_susceptible\n","infected[1] <- initial_infected\n","recovered[1] <- initial_recovered\n","\n","# Simulate the SIR model\n","for (i in 2:length(time)) {\n","  dS <- -beta * susceptible[i - 1] * infected[i - 1]\n","  dI <- beta * susceptible[i - 1] * infected[i - 1] - gamma * infected[i - 1]\n","  dR <- gamma * infected[i - 1]\n","\n","  susceptible[i] <- susceptible[i - 1] + dS\n","  infected[i] <- infected[i - 1] + dI\n","  recovered[i] <- recovered[i - 1] + dR\n","}\n","\n","# Plot the results\n","plot(time, susceptible, type = \"l\", col = \"blue\", xlab = \"Time\", ylab = \"Population\", main = \"SIR Model Simulation\")\n","lines(time, infected, col = \"red\")\n","lines(time, recovered, col = \"green\")\n","legend(\"topright\", legend = c(\"Susceptible\", \"Infected\", \"Recovered\"), col = c(\"blue\", \"red\", \"green\"), lty = 1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":437},"id":"_xCn1tHD69O-","executionInfo":{"status":"ok","timestamp":1695357680470,"user_tz":-330,"elapsed":11,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"a70ebd69-c505-4e6e-93ed-d6250a250a5c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["Plot with title “SIR Model Simulation”"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0gAAANICAIAAAByhViMAAAACXBIWXMAABJ0AAASdAHeZh94\nAAAgAElEQVR4nOzdeVxWdf7///cl+ya4sIMoagbDKBqKG5qKEiKIZC6lNjk6gmaZude4VS5j\nOq5UkzOaVmPuGplmmSgqiguYgabkGpCIoKDs1/X743zn/K4PIqABF+dcj/tf53qf9znX67q4\n2fXs/T7nfTQ6nU4AAABA+RoZugAAAADUDoIdAACAShDsAAAAVIJgBwAAoBIEOwAAAJUg2AEA\nAKgEwQ4AAEAlCHYAAAAqQbADAABQCYIdAACAShDsAAAAVIJgBwAAoBIEOwAAAJUg2AEAAKgE\nwQ4AAEAlCHYAAAAqQbADAABQCYIdAACAShDsAAAAVIJgBwAAoBIEOwAAAJUg2AEAAKgEwQ4A\nAEAlCHYAAAAqQbADAABQCYIdAACAShDsAAAAVIJgBwAAoBIEOwAAAJUg2AEAAKgEwQ4AAEAl\nCHYAAAAqQbADAABQCYIdAACAShDsAAAAVIJgBwAAoBIEOwAAAJUg2AEAAKgEwQ4AAEAlCHYA\n1GP37t0ajUaj0Ziamj7psdu3b5eOtbS0rN2q6u7MBizA4B8KQKUIdoAa5ObmLlu2LDg42M3N\nzcLCwtzcvFmzZl26dJkxY8b169f1e65fv17zP3l5eY82VmBjY9OmTZsxY8YkJCRUW0aF8/z7\n3/9+tM9nn32m32f9+vW18g3Uv5p/5wBQb574f2oBNDRHjhyJiorKycnRb7x79+7du3eTkpLW\nrFmzZcuWwYMHP93JHz58mJ6enp6evnnz5mnTpi1btqzmx+7evfuvf/1rhca9e/c+XSUNyhN9\n5/7+/v/85z+FEE8xjtgQ/P777+7u7uXl5Wlpac8++6zUqPQPBagV/yABZcvNzZUThqWlZVRU\nVLt27YqKipKTkw8cOKDVaouKikaPHp2enu7o6FiTE4aEhMg/1WVlZTdu3EhLS5Nefvjhh/7+\n/q+88koNa/v+++8fPHhgY2MjtxQXF3/33XdP8PEapCf9ztu0aTNlyhRDV/30tm7dWl5eXqFR\n6R8KUCuCHaBsu3fvlhKGqanpyZMn27dvr79ryJAhQoj8/PxNmza9/fbbNTnhli1bHBwc9Fvi\n4+NDQ0MLCwuFEOvWratJsPPw8Lh161ZRUdGBAweioqLk9kOHDhUUFAgh3N3df/vttxp9woan\n1r/zBu6rr74ydAkAaopr7ABlky/n8vT01E8YQojIyMj3339/+fLlu3btevHFF5/6LXr37j1m\nzBhpOzk5uSaHdOnSxcTERAixZ88e/XZpHtbExOS5556r9MD79+8vWrSoa9euTZs2NTc3d3Z2\nDgkJ2bBhw6MjRkKIjRs3BgQE2NjYNG3aNCws7PTp0xqN5nElXbp0KTo6um3btpaWlo0bN+7c\nufPq1avLyspq8nEqeNLvvNL7DP7zn/9Ijb169ZL6dOzY0draumXLlu+++25paakQIi0tLSIi\nokmTJra2tgMGDPj555/lw999913p8K5du+oX8ES3j+h0ui1btoSEhDg5OZmZmTVu3DgwMHDN\nmjXytz1o0CCNRnPs2DHppY+Pj0ajkQbqqrh5ooZ/xArfwNGjR/v37y992KCgoO+//77a+gFU\nQgdAyWJjY6V/y40aNfr222+r7f/pp5/K//xzc3OraNQ3d+5caa+pqWlNTj5q1CgpcDRt2rSs\nrEzu4OHhIYTo1q3b0KFDpZ6ffvqpvDc5Odnd3b3S/1J169btzp07+u/16GCYhYXFu+++K22b\nmJjod96xY0elN2/27du3sLBQ6rNt2zb5PFV/h0/6nVd65i1btkiNfn5+W7durRBJJ02a9Ouv\nvzZv3ly/0dHRMS8vTzr8nXfekRoDAwP132vXrl2PfgOP+2iPG3wdNGiQVqvV6XRhYWGP7n3z\nzTerOGfN/4j638CBAwfMzc31O5uYmHz//ffVfrcAKmDEDlC2fv36SWNjWq120KBBYWFh//rX\nv1JTU3U6XS2+y5EjR6SNtm3b1qR/SUlJSEiIEOLu3bvysWfPnr1165YQYsCAAY8OleXm5oaF\nhUnzs61atfroo4927949c+ZMaeTpxIkTr776qtz51KlTy5cvl7b79u27c+fOvXv39unTZ8mS\nJY8Wc/Xq1VGjRhUVFQkhpk+ffunSpaSkpN69ewshDh06tHDhwpp/D5Ja+c6lMwghcnJypk6d\nGh4e/vrrr9vb20uN69evnzRpkrm5+ZtvvhkYGCg1Zmdnb9iw4UmrfZy4uLgvvvhCCNGoUaPY\n2Niffvrp3//+t/Rtx8XFbd++XQjxj3/8Q3/M9Ysvvjh69Oibb775uHM+0R9R/xuYMGGCr6/v\n7NmzBwwYIDWWl5fPmTOntj4sYEQMnSwB/FGLFi169J92kyZNwsPD//Wvf92/f1+/8xON2JWV\nlV2+fHnSpEny3tWrV1dRiXyeF1988dSpU9K2NMCj0+nmzZsntZw6dUq+Y1QesVuwYIHU0rhx\n499++00+5+bNm+V3P336tNQ4fvx4qcXR0bGgoEBqLC0tle/Z1B+vev3116XG559/Xm7Mzs62\ntbUVQtjZ2UmDdjUfsXvS77zSM8uNQoiXXnpJatyxY4fcaGlpmZ6ertPpiouL27VrJzWGh4dL\nPf/4iN3atWvDwsLCwsLkP5BOp4uIiJB6jhkzRmrJzMyUS0pLS6v6nE/0R9T/BoKCguShU3kc\nsVGjRiUlJdX+LQDoY8QOULzZs2d/++23QUFB+tN5ubm5X3/99d/+9rcWLVps3Lix5mdr0qSJ\nvMicqalp27Zt161bJ+3q1avXhAkTaniegIAAaUpOHvKRLrBzd3cPCAh4tP/OnTuljaioKDc3\nN7l95MiRTZo0kbb37dsnbciL6oWHh8t33ZqamlY6t/jtt99KGz169Cj6H1tb206dOgkh8vPz\n5WvIaq52v/Pp06fLH8fCwkLaHjJkiLe3txDC3Nw8PDxcarx58+aTlvo4kyZNiouLi4uLW7ly\npdzo5eUlbWRlZT3FOZ/oj6hvwYIF8lz5a6+9Jm1otdqMjIynKAMwZgQ7QA1eeOGFI0eO3Lx5\nc9OmTRMmTGjfvr0cOPLy8l577TX5F/fpNG3adMaMGY9eCFUFjUYjDctdu3bt/Pnzt27dOnfu\nnBAiMjLy0VscdDqdfGfAn//8Z/1dJiYm8jicvPDKtWvXpI0KU8N/+tOfHj3z1atXpe0PPvjA\nSo88R6x/U0LN1eJ37ufnJ22YmZnJq9Lo35bh6uoqbeTn5z9FqY/z/fffR0ZGtm7d2tLSUory\na9askXZVerdK1Z70j6hPP+vL4VLU9ucFjAHBDlAPd3f30aNHf/zxxykpKTdu3JgzZ458GdPf\n//73Gp5k4MCBg/9HHmXp1avX0qVLn/ThUZGRkdLGwYMHv/766wqN+h4+fChfdSfNkOqTx+Sk\nn3mdTietvSKEsLa21u9Z4aV0Zq1WW3Wdd+/erbpDFf74d25hYWFlZaX/UtrQX3Sm5nm65j76\n6KP+/fvv2bPn119/NTU19fHx6dChQ4XbNZ7IE/0R9VlYWNjZ2ckveUYZ8EcQ7AA1KC0t1f3f\nK/c9PDw++OAD+c6A1NRUOQxV7Ysvvtj9Px9++KHUuHv3bv3Lv2ro+eefl9LJoUOHfvjhByGE\n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\nwNpQ1wh2xohgBwAqFhwcPH/+/AqNH3744fTp0+fMmbN3715DFIV6wlSsMSovZ7kTADAub7zx\nhrm5+bFjx+SW33//fdKkSV5eXubm5o6OjpGRkUlJSfqHZGVljRs3zt3d3cbGpkOHDqtWrSor\nK5P3Xr9+/bXXXnN3dzc3N2/evHlERMSpU6ekXT179mzUqFFGRob+2W7dutWoUaPevXvX5N1H\njBih0Whu377dv39/KysrOYxWW/O+ffuee+45KysrJyencePG5eXl1cJ3pyiM2BkjrZYROwAw\nLjqdTqvV2tjYSC+zs7MDAwPz8vKio6P9/Pxu3rwZGxsbFBR04MABKXtlZ2cHBAQUFBSMGTPG\ny8vr8OHDU6ZM+emnn9avXy+EuHnzZpcuXR4+fBgTE/OnP/3pt99+i42N7dWr1/fff9+zZ8+X\nX3752LFjO3fufP311+UCtm/frtPpRo0aVZN3Nzc3F0K89dZbZmZmc+fO9fb2rslRx44di4iI\ncHZ2njt3rqOjY3x8fERERCNjG8nQoToff/yxECI/P9/QhdSajz7SPfusoYsAgHpx4sQJIURh\nYaGhC6kPmzdvFkLMmzfv0V0LFiwQQowdO1Z6GRMTY2pqmpSUJHe4ceOGnZ1dQECA3EEIceDA\nAblDWFiYEOLChQs6ne7VV18VQuzcuVPem5qaamJi0rVrV51Od/v2bVNT0+eff16/gG7dullY\nWOTm5tbk3ceOHSuEGDBgQHl5udyn2qNCQ0OFEKdOnZI7TJw4UQgRGBhYgy/vCRQXFwcFBR07\ndqx2T1srGLEzRlxjBwA1cUqcui/u1+c7mgiTnqKnmTD7Iyc5fPiw/jV2eXl5J0+eTExMbNOm\nzcKFC4UQOp1u27Zt7du39/DwyMrKkrqZmZl17979wIEDBQUFNjY2W7du9fT07N+/v3ye1atX\nv/32287Ozjqdbvfu3c7OzpGRkfJeHx+fbt26JSQk5OTkODo6BgcHHzx48Pbt205OTkKIW7du\nJSYmDhkyxMHBodp3t7W11Wg0QohXX31VHm+r9ihra+vDhw+3bt26c+fOclXjx4+PjY39I1+m\n4hDsjBHBDgCqVSAKgkVwvsivzzc1ESaHxKFeotcfOUl8fHx8fLx+i5OT05w5c95+++2mTZsK\nIW7fvn3nzp07d+64uro+eviNGzccHBxycnI6deokBSyJt7e3NCWamZl579695557Tn+vEKJd\nu3YJCQm//PJLt27dRo4cuX///t27d//tb38T/3cettp39/X1lU8ot1d7lL29fWFhoVSh7Nln\nn636u1Ifgp0xItgBQLVshW09D9fVlnnz5skjdoWFhb6+vjk5OTExMVKqE0Lk5+cLIfz9/Rcv\nXvzo4W5ubjk5OUIICwuLSs//4MEDIYR8uZ7MyspK3jtkyJDo6OgdO3ZIwW7r1q1NmjSRJnOr\nfXd5297eXt6u9qjs7GwhhKWlpX67paVlhfSpegQ7Y0SwAwAjYWVltXLlysjIyMmTJ+/atUtq\ntLOzkzZeeOGFSo8yMzMTQjzullJbW1vxvwCnT2qRTm5nZxcWFrZ79+7c3NwHDx4kJiaOHz9e\nuiWi2nevVLVHFRQUCCGKiooqNOp0upq/iwoY2a0iEEKw3AkAGJPBgweHhobu3r179+7dUouz\ns3Pz5s0vXrxYIbpJg15CCBsbG0dHx7S0tNLSUnnvpUuX1q5d+/PPP7u4uDRt2jQtLa1CZkpN\nTdVoNPL86csvv1xWVvbNN9/oz8PW5N0rVe1RLi4u5ubmFZ6ucf78+aq+GjXi590YsdwJABiV\nVatWWVhYTJ48WZrQFEK89NJLRUVFy5Ytk/tkZ2e3b98+PDxcejl48OCcnJzPPvtM7jB//vzJ\nkycXFxcLIaKiojIzM/fs2SPvTU5OPnXqVN++fR0cHKSWgQMH2tvbf/vtt7t37/by8tJ/GEa1\n716pqo8yNTXt3r37lStX9Fe2W7duXc2/JXVgKtYYMRULAEalbdu2b7/99qJFi955553Vq1cL\nIebPn//NN98sWrQoMzOzd+/eGRkZH3/8cU5OzhtvvCEdMm/evLi4uJiYmJSUFC8vr/j4+Li4\nuDFjxnTq1EkIsWDBgri4uNGjR7/xxhvt2rW7du3aunXrbG1tV6xYIb+phYVFVFTUnj177t+/\nP2PGDP1r3ap990pVe9SMGTPi4+MHDRo0duzYZs2axcfHP3z4UP9CPaNguJVWFEN969jNn6/r\n3dvQRQBAvWAdO8mDBw88PT0bNWp08uRJqSUzMzMmJsbT09PU1NTBwSEiIkLeJbl27dqoUaOc\nnJzMzMy8vb2XL19eVlYm771x48Zrr73m6upqamrq5OQ0YsSI1NTUCm/63XffSWHj0V1Vv/tf\n//pXIcTly5ef6CidTrdly5Y///nP0nMpxo4dm5ub6+np2bFjx5p8ezXXkNex0+iM7KLCp/DJ\n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\nAACS+F+ZPzz4fHjBGwAAAABJRU5ErkJggg=="},"metadata":{"image/png":{"width":420,"height":420}}}]},{"cell_type":"markdown","source":["**Exercise 1.28: On any day, the number of accidents on the highway has a Poisson distribution with parameter *. The parameter * varies from day to day and is itself a random variable. * is uniformly distributed on (0,3).**\n","\n","# 6. Estimate the mean and variance of the number of accidents per day."],"metadata":{"id":"HULJIpu4-h6u"}},{"cell_type":"code","source":["# Set the seed for reproducibility\n","set.seed(123)\n","\n","# Number of simulations\n","num_simulations <- 10000\n","\n","# Simulate parameter lambda from uniform distribution (0, 3)\n","lambda <- runif(num_simulations, min = 0, max = 3)\n","\n","# Simulate accidents for each lambda value\n","accidents <- rpois(num_simulations, lambda)\n","\n","# Calculate mean and variance of accidents\n","mean_accidents <- mean(accidents)\n","var_accidents <- var(accidents)\n","\n","# Print the results\n","print(paste(\"Estimated Mean:\", mean_accidents))\n","print(paste(\"Estimated Variance:\", var_accidents))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ExIFR6LV_LwW","executionInfo":{"status":"ok","timestamp":1695357680470,"user_tz":-330,"elapsed":6,"user":{"displayName":"HEMANTH SAI PAVAN IMMIDISETTY","userId":"08260291429688432063"}},"outputId":"1c2204f2-d2f6-4335-8aa8-3de011749104"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1] \"Estimated Mean: 1.4701\"\n","[1] \"Estimated Variance: 2.18972496249625\"\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"pl9yWy8uAFz3"}}]}